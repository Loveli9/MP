org.springframework.aop.config.AopNamespaceHandler

org.springframework.aop.config.AspectJAutoProxyBeanDefinitionParser.parse

org.springframework.beans.factory.xml.BeanDefinitionParser.parse

org.springframework.aop.config.AopNamespaceUtils.registerAspectJAnnotationAutoProxyCreatorIfNecessary

注册 AnnotationAwareAspectJAutoProxyCreator
org.springframework.aop.config.AopConfigUtils.registerAspectJAnnotationAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)

注册或者升级 AnnotationAwareAspectJAutoProxyCreator
org.springframework.aop.config.AopConfigUtils.registerOrEscalateApcAsRequired
AnnotationAwareAspectJAutoProxyCreator类
org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator

处理proxy-target-class以及expose-proxy属性
org.springframework.aop.config.AopNamespaceUtils.useClassProxyingIfNecessary

org.springframework.aop.config.AopNamespaceUtils.registerComponentIfNecessary

AOP逻辑开始
org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization
必要时包装给定的bean，即是否有资格被代理。
org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary

（一）为bean获取增强
org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean
找到合适的增强
org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors
获取所有的增强
org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator#findCandidateAdvisors
实现：
org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator#findCandidateAdvisors
寻找所有增强中适用于bean的增强并应用
org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply

（二）创建代理
org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator#createProxy
获取并创建代理
org.springframework.aop.framework.ProxyFactory#getProxy(java.lang.ClassLoader)
创建AOP代理
org.springframework.aop.framework.ProxyCreatorSupport#createAopProxy
org.springframework.aop.framework.DefaultAopProxyFactory#createAopProxy
获取AOP代理
（1）JdkDynamicAopProxy
org.springframework.aop.framework.JdkDynamicAopProxy#getProxy(java.lang.ClassLoader)
（2）CglibAopProxy
org.springframework.aop.framework.CglibAopProxy#getProxy(java.lang.ClassLoader)


